
@using EventTrackerAdminWeb.Extensions
@using PagedList.Mvc
@model PagedList.IPagedList<EventTracker.BusinessModel.Membership.HouseHold>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*
    <div class="panel panel-default">

        <div class="panel-heading">
            <h>Events</h>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed table-bordered">
                <tr>
                    <th class="text-right">
                        @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th class="text-right">HH Leader</th>
                    <th class="text-right">Area</th>
                    <th class="text-right">State</th>
                </tr>
                @foreach (var item in Model) {
                    <tr>
                        <td>@Html.ActionLink(item.Name, "EditHouseHold", new { item.HouseHoldId })</td>
                        <td class="text-right">@item.HouseHoldLeader</td>
                        <td class="text-right">@item.Area</td>
                        <td class="text-right">@item.State</td>
                    </tr>
                }
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
        <div class="panel-footer">
            @Html.ActionLink("Add Member", "Create", null,
                    new { @class = "btn btn-default" })
        </div>
    </div>
*@
<div class="panel panel-default">
    <div class="panel-body">
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Name", "Households", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>HH Leader</th>
                <th>Area</th>
                <th>State</th>
                <th>Count</th>
                <th>
                    <div class="pull-right">
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add New Household", "Create", "NewHouseHold", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>
                </th>
            </tr>

            @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HouseHoldLeader)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Area)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MemberCount)
                    </td>
                    <td>
                        <div class="pull-right">
                            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "EditHousehold", "Household", routeValues: new { houseHoldId = item.HouseHoldId }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                            &nbsp;
                            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-search'></span>", "Details", "Details", "People", routeValues: new { id = item.HouseHoldId }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                            &nbsp;
                            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Delete", "Delete", "People", routeValues: new { id = item.HouseHoldId }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })

                        </div>
                    </td>
                </tr>
            }

        </table>
        <br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Households",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>

    </div>