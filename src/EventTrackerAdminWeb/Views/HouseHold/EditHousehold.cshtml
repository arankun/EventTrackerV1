@model EventTracker.BusinessModel.Membership.HouseHoldDetailsViewModel

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-default">

    <div class="panel-heading">
        <h>Household</h>
    </div>


    @using (Html.BeginForm("EditHousehold", "HouseHold")) {
        <div class="panel-body">
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.HouseHoldId)
            @*
                @Html.HiddenFor(model => model.HouseHoldLeaderMemberId)
            *@
            @if (Model.HouseHoldId <= 0) {
                <div class="form-group">
                    <label>Household Leader</label>
                    @Html.DropDownList("HouseHoldLeaderMemberId", Model.HeadOfFamilyMembersList, "-- Select HH Leader --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HouseHoldLeaderMemberId, "", new { @class = "text-danger" })
                </div>
            }       
            else {
                <div class="form-group">
                    <label>Household Leader</label>
                    @*
                        @Html.DropDownList("HouseHoldLeaderMemberId", Model.HeadOfFamilyMembersList, "-- Select HH Leader --", new { @disabled = "disabled" })
                    *@
                    @Html.Label(Model.HouseHoldLeader)
                </div>
            }
            <div class="form-group">
                @*
                    @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                *@
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Area)
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>


        </div>
        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel and return to List", "List", null, new { @class = "btn btn-default" })
        </div>
    }

    @if (Model.HouseHoldId > 0) {
        <div class="row">
            <div class="form-group">
                <div class="col-md-10" id="replacetarget">
                    @{ Html.RenderAction("HouseholdMembers", "HouseHold", new { householdId = Model.HouseHoldId, houseHoldLeaderMemberId = Model.HouseHoldLeaderMemberId }); }
                </div>
            </div>
        </div>
                        }

</div>


<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
@**@

    <p>
        @Html.ActionLink("Back to List", "List")

    </p>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

    }
